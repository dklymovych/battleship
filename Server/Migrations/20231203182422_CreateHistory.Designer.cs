// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Database;
using Server.Models;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231203182422_CreateHistory")]
    partial class CreateHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Username");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Server.Models.PlayerMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GameCode")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<bool>("IsDestroy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHit")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameCode");

                    b.HasIndex("PlayerId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("Server.Models.Room", b =>
                {
                    b.Property<string>("GameCode")
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime?>("GameEndedAt")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("GameStartedAt")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<int>("Player1Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Player2Id")
                        .HasColumnType("integer");

                    b.Property<Dictionary<string, List<List<Coordinate>>>>("ShipsPosition1")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<Dictionary<string, List<List<Coordinate>>>>("ShipsPosition2")
                        .HasColumnType("json");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("integer");

                    b.HasKey("GameCode");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.HasIndex("WinnerId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Server.Models.PlayerMove", b =>
                {
                    b.HasOne("Server.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("GameCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Server.Models.Room", b =>
                {
                    b.HasOne("Server.Models.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id");

                    b.HasOne("Server.Models.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.Navigation("Player1");

                    b.Navigation("Player2");

                    b.Navigation("Winner");
                });
#pragma warning restore 612, 618
        }
    }
}
